@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="invoice" id="report11">
    <div class="header">
        <!-- Logo Image -->
        <img id="logoImage" src="https://images.metabill.in/uploadlogo/DEMO_ESJAY_IT_ORGANIZATION_LOGO_03_01_2025.png" alt="Company Logo">
        <h1>Invoice</h1>
    </div>

    <div class="details pa4">
        <p><strong>Invoice Number:</strong> INV-001</p>
        <p><strong>Date:</strong> 01/10/2023</p>
        <p><strong>Customer:</strong> John Doe</p>
    </div>

    <div class="items">
        <table>
            <thead>
                <tr>
                    <th>Description</th>
                    <th>Quantity</th>
                    <th>Unit Price</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 1; i <= 2; i++)
                {
                    <tr>
                        <td>Product @i</td>
                        <td>@(i % 5 + 1)</td> <!-- Random quantity (1 to 5) -->
                        <td>$@((i * 10).ToString("0.00"))</td> <!-- Unit price -->
                        <td>$@((i * 10 * (i % 5 + 1)).ToString("0.00"))</td> <!-- Total -->
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="total pa4">
        <h3>Total: $175.00</h3>
    </div>

    <!-- Stamp Image -->
    <img id="stampImage" src="https://www.onlygfx.com/wp-content/uploads/2017/12/ok-stamp-2-1024x1024.png" alt="Stamp Logo" class="small-image">
</div>

<div class="download-link">
    <a href="javascript:void(0);" onclick="download11()" class="btn">Download PDF</a>
</div>

<script src="~/Content/Report1.js"></script>
<!-- Include Required Libraries -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
<input type="hidden" id="logoUrl" value="https://images.metabill.in/uploadlogo/DEMO_ESJAY_IT_ORGANIZATION_LOGO_03_01_2025.png">
<input type="hidden" id="stampUrl" value="https://www.onlygfx.com/wp-content/uploads/2017/12/ok-stamp-2-1024x1024.png">
-----------------------------------------------------------------------------------------------------------------------------------------------------

function loadImageWithCORSProxy(imageUrl, imgElementId) {
    const proxyUrl = 'https://api.allorigins.win/raw?url=';  // Use an alternative proxy URL
    const fullUrl = proxyUrl + encodeURIComponent(imageUrl);

    console.log("Loading image from: " + fullUrl); // Log the final URL for debugging

    const img = document.getElementById(imgElementId);

    // Check if the image element is found
    if (!img) {
        console.error("Image element not found with ID: " + imgElementId);
        return;
    }

    img.onload = function () {
        console.log("Image loaded successfully.");
    };

    img.onerror = function () {
        console.error('Failed to load image from URL: ' + fullUrl);
    };

    img.src = fullUrl;
}

function download11() {
    const { jsPDF } = window.jspdf;

    const invoiceElement = document.getElementById('report11');

    // Ensure that images are loaded before creating the canvas
    // Use a Promise to ensure all images are loaded before generating the PDF
    Promise.all([
        new Promise((resolve, reject) => {
            const logoImage = document.getElementById('logoImage');
            if (logoImage.complete) {
                resolve();  // Image already loaded
            } else {
                logoImage.onload = resolve;  // Wait for image to load
                logoImage.onerror = reject;  // Handle loading error
            }
        }),
        new Promise((resolve, reject) => {
            const stampImage = document.getElementById('stampImage');
            if (stampImage.complete) {
                resolve();  // Image already loaded
            } else {
                stampImage.onload = resolve;  // Wait for image to load
                stampImage.onerror = reject;  // Handle loading error
            }
        })
    ])
        .then(() => {
            // Use html2canvas to capture the screenshot of the invoice
            html2canvas(invoiceElement, {
                logging: true,
                letterRendering: true,
                useCORS: true,
                scale: 2 // Increase scale for higher resolution
            }).then(function (canvas) {
                // Create a PDF document
                const pdf = new jsPDF();

                // Add the image of the invoice to the PDF
                pdf.addImage(canvas.toDataURL('image/png'), 'PNG', 10, 10, 180, 0); // Adjust width (180) to fit page

                // Open the PDF in a new tab
                const pdfUrl = pdf.output('bloburl');
                window.open(pdfUrl, '_blank');
            });
        })
        .catch((error) => {
            console.error("Error loading images:", error);
        });
}

// Initialize images after the document loads
window.onload = function () {
    const logoUrl = document.getElementById('logoUrl').value;
    const stampUrl = document.getElementById('stampUrl').value;

    // Load images dynamically using CORS proxy
    loadImageWithCORSProxy(logoUrl, 'logoImage');
    loadImageWithCORSProxy(stampUrl, 'stampImage');
};

-------------------------------------------------------------------
